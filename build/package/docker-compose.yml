version: "3.8"

services:
  ovs-port-manager:
    build:
      context: ../..
      dockerfile: build/package/Dockerfile
    container_name: ovs-port-manager
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    volumes:
      # Essential mounts for scratch container
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/run/openvswitch:/var/run/openvswitch:ro
      - /var/run/netns:/var/run/netns:shared
      - /proc:/proc:ro
      - /sys:/sys:ro
    environment:
      - LOG_LEVEL=info
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    devices:
      - /dev/net/tun
    # Health check disabled for scratch container - use depends_on without condition instead
    # healthcheck:
    #   test: ["CMD", "true"]  # Minimal health check - scratch containers can't run external commands
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 5s

  # Example application with OVS configuration
  example-app:
    image: nginx:latest
    container_name: example-app
    labels:
      - "ovs.ip_address=192.168.100.10/24"
      - "ovs.bridge=ovsbr0"
      - "ovs.gateway=192.168.100.1"
    depends_on:
      - ovs-port-manager
    restart: unless-stopped

  # Another example application
  example-app2:
    image: python:3.13-alpine
    container_name: example-app2
    labels:
      - "ovs.ip_address=192.168.100.11/24"
      - "ovs.bridge=ovsbr0"
      - "ovs.gateway=192.168.100.1"
      - "ovs.mtu=1400"
    command: python -c "import http.server; http.server.test(port=8000)"
    depends_on:
      - ovs-port-manager
    restart: unless-stopped
